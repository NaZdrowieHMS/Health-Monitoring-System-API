swagger: "2.0"
info:
  title: "Health-Monitoring-System"
  description: >
    This API provides endpoints to manage patients, doctors and their data in the Health Monitoring and Diagnosis System.
  version: "1.0.0"
paths:
  "/":
    get:
      description: "Returns message showing app is up"
      tags:
        - "General"
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation"

  /api/patients:
    get:
      summary: "Get all Patients"
      description: "Retrieve a list of all patients."
      tags:
        - "Patients"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Patient"
                description: "List of patient records"
              number_of_records:
                type: "integer"
                description: "Total number of patient records"
              pagination:
                type: "object"
                properties:
                  total_pages:
                    type: "integer"
                    description: "Total number of pages"
                  total_records:
                    type: "integer"
                    description: "Total number of patient records"
                  current_page:
                    type: "string"
                    description: "URL for the current page"
                  next_page:
                    type: "string"
                    description: "URL for the next page, if available"
                  previous_page:
                    type: "string"
                    description: "URL for the previous page, if available"
    post:
      summary: "Create new Patient"
      description: "Create a new patient record."
      tags:
        - "Patients"
      parameters:
        - in: "body"
          name: "body"
          description: "Patient object to be created"
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
                description: "Patient's first name"
              surname:
                type: "string"
                description: "Patient's last name"
              email:
                type: "string"
                description: "Patient's email address"
              pesel:
                type: "string"
                pattern: '^[0-9]{11}$'
                description: "PESEL number (Polish identification number)"
      responses:
        201:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                 type: "boolean"
                 description: "Indicates if the operation was successful"
              data:
                  $ref: "#/definitions/Patient"
                  description: "Created patient"
        409:
          description: "Conflict"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Conflict occurred while creating patient"
    put:
      summary: "Update Patient"
      description: "Update an existing patient record."
      tags:
        - "Patients"
      parameters:
        - in: "body"
          name: "body"
          description: "Updated patient object"
          required: true
          schema:
            $ref: "#/definitions/Patient"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Patient"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        409:
          description: "Conflict"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Conflict occurred while updating patient"
  /api/patients/{patient_id}:
    get:
      summary: "Get Patient by id"
      description: "Retrieve a patient record by id."
      tags:
        - "Patients"
      parameters:
        - name: "patient_id"
          in: "path"
          description: "Id of the patient to retrieve"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Patient"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
    delete:
      summary: "Delete Patient"
      description: "Delete a patient record by Id."
      tags:
        - "Patients"
      parameters:
        - name: "patient_id"
          in: "path"
          description: "Id of the patient to delete"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              message:
                type: "string"
                description: "Confirmation message"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
definitions:
  Patient:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Unique identifier for the patient"
      name:
        type: "string"
        description: "Patient's first name"
      surname:
        type: "string"
        description: "Patient's last name"
      email:
        type: "string"
        description: "Patient's email address"
      pesel:
        type: "string"
        pattern: '^[0-9]{11}$'
        description: "PESEL number (Polish identification number)"
  Doctor:
    properties:
      id:
        type: "integer"
        description: "Unique identifier for the patient"
      name:
        type: "string"
        description: "Patient's first name"
      surname:
        type: "string"
        description: "Patient's last name"
      email:
        type: "string"
        description: "Patient's email address"
      pesel:
        type: "string"
        pattern: '^[0-9]{11}$'
        description: "PESEL number (Polish identification number)"
      pwz:
        type: "string"
        pattern: '^[0-9]{7}$'
        description: "PWZ number (the number assigned to a doctor's licence to practise)"
securityDefinitions:
  BasicAuth:
    type: basic
security:
  - BasicAuth: []