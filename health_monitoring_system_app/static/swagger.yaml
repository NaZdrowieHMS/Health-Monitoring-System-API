swagger: "2.0"
info:
  title: "Health-Monitoring-System"
  description: >
    This API provides endpoints to manage patients, doctors and their data in the Health Monitoring and Diagnosis System.
  version: "1.0.0"
paths:
  "/":
    get:
      description: "Returns message showing app is up"
      tags:
        - "General"
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation"

  /api/patients:
    get:
      summary: "Get all Patients"
      description: "Retrieve a list of all patients."
      tags:
        - "Patients"
      parameters:
        - name: "page"
          in: "query"
          description: "Page number for pagination (default: 1)"
          required: false
          type: "integer"
        - name: "per_page"
          in: "query"
          description: "Number of items per page (default: 10)"
          required: false
          type: "integer"
        - name: "sort"
          in: "query"
          description: "Field to sort by (e.g., name, created_date)"
          required: false
          type: "string"
        - name: "sort_order"
          in: "query"
          description: "Sort order (asc or desc)"
          required: false
          type: "string"
        - name: "pesel"
          in: "query"
          description: "Filter patients for example by pesel etc."
          required: false
          type: "string"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Patient"
                description: "List of patient records"
              number_of_records:
                type: "integer"
                description: "Total number of patient records"
              pagination:
                type: "object"
                $ref: "#/definitions/Pagination"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
    post:
      summary: "Create new Patient"
      description: "Create a new patient record."
      tags:
        - "Patients"
      parameters:
        - in: "body"
          name: "body"
          description: "Patient object to be created"
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
                description: "Patient's first name"
              surname:
                type: "string"
                description: "Patient's last name"
              email:
                type: "string"
                description: "Patient's email address"
              pesel:
                type: "string"
                pattern: '^[0-9]{11}$'
                description: "PESEL number (Polish identification number)"
      responses:
        201:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                 type: "boolean"
                 description: "Indicates if the operation was successful"
              data:
                  $ref: "#/definitions/Patient"
                  description: "Created patient"
        409:
          description: "Conflict"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Conflict occurred while creating patient"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
    put:
      summary: "Update Patient"
      description: "Update an existing patient record."
      tags:
        - "Patients"
      parameters:
        - in: "body"
          name: "body"
          description: "Updated patient object"
          required: true
          schema:
            $ref: "#/definitions/Patient"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                 type: "boolean"
                 description: "Indicates if the operation was successful"
              data:
                  $ref: "#/definitions/Patient"
                  description: "Updated patient"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
  /api/patients/{patient_id}:
    get:
      summary: "Get Patient by id"
      description: "Retrieve a patient record by id."
      tags:
        - "Patients"
      parameters:
        - name: "patient_id"
          in: "path"
          description: "Id of the patient to retrieve"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                 type: "boolean"
                 description: "Indicates if the operation was successful"
              data:
                  $ref: "#/definitions/Patient"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
    delete:
      summary: "Delete Patient"
      description: "Delete a patient record by Id."
      tags:
        - "Patients"
      parameters:
        - name: "patient_id"
          in: "path"
          description: "Id of the patient to delete"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              message:
                type: "string"
                example: "Patient with id 1 deleted."
                description: "Confirmation message"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
  /api/patients/{patient_id}/health:
    get:
      summary: "Get health comments for patient by id"
      description: "Retrieve health comments for patient by id"
      tags:
        - "Patients"
      parameters:
        - name: "patient_id"
          in: "path"
          description: "Id of the patient to retrieve all health comments"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/HealthComment"
                description: "List of health comment records"
              number_of_records:
                type: "integer"
                description: "Total number of health comment records"
              pagination:
                type: "object"
                $ref: "#/definitions/Pagination"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
  /api/patients/{patient_id}/predictions:
    get:
      summary: "Get Patient predictions by patient id"
      description: "Retrieve patient prediction records by id."
      tags:
        - "Patients"
      parameters:
        - name: "patient_id"
          in: "path"
          description: "Id of the patient to retrieve"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/AIPrediction"
                description: "List of ai prediction records sorted by modified date"
              number_of_records:
                type: "integer"
                description: "Total number of ai prediction records"
              pagination:
                type: "object"
                $ref: "#/definitions/Pagination"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
  /api/patients/{patient_id}/predictions/latest:
    get:
      summary: "Get latest Patient prediction by patient id"
      description: "Retrieve latest patient prediction record by id."
      tags:
        - "Patients"
      parameters:
        - name: "patient_id"
          in: "path"
          description: "Id of the patient to retrieve"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                $ref: "#/definitions/AIPrediction"
                description: "Latest ai prediction patient record."
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
  /api/patients/{patient_id}/referrals:
    get:
      summary: "Get Patient referrals by patient id"
      description: "Retrieve patient referral view records by id sorted: first with completed=false and then orted by modified date."
      tags:
        - "Patients"
      parameters:
        - name: "patient_id"
          in: "path"
          description: "Id of the patient to retrieve"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/ReferralView"
                description: "List of referral view records firstly showed by completed=false and sorted by modified date"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
  /api/doctors:
    get:
      summary: "Get all Doctors"
      description: "Retrieve a list of all doctors."
      tags:
        - "Doctors"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Doctor"
                description: "List of doctor records"
              number_of_records:
                type: "integer"
                description: "Total number of doctor records"
              pagination:
                type: "object"
                $ref: "#/definitions/Pagination"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
    post:
      summary: "Create new Doctor"
      description: "Create a new doctor record."
      tags:
        - "Doctors"
      parameters:
        - in: "body"
          name: "body"
          description: "Doctor object to be created"
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
                description: "Doctor's first name"
              surname:
                type: "string"
                description: "Doctor's last name"
              email:
                type: "string"
                description: "Doctor's email address"
              pesel:
                type: "string"
                pattern: '^[0-9]{11}$'
                description: "PESEL number (Polish identification number)"
              pwz:
                type: "string"
                pattern: '^[1-9]\d{6}$'
                description: "PWZ number (the number assigned to a doctor's licence to practise)"
      responses:
        201:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                $ref: "#/definitions/Doctor"
                description: "Created doctor"
        409:
          description: "Conflict"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Conflict occurred while creating doctor"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
    put:
      summary: "Update Doctor"
      description: "Update an existing doctor record."
      tags:
        - "Doctors"
      parameters:
        - in: "body"
          name: "body"
          description: "Updated doctor object"
          required: true
          schema:
            $ref: "#/definitions/Doctor"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                $ref: "#/definitions/Doctor"
                description: "Updated doctor"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
  /api/doctors/{doctor_id}:
    get:
      summary: "Get Doctor by id"
      description: "Retrieve a doctor record by id."
      tags:
        - "Doctors"
      parameters:
        - name: "doctor_id"
          in: "path"
          description: "Id of the doctor to retrieve"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                $ref: "#/definitions/Doctor"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
    delete:
      summary: "Delete Doctor"
      description: "Delete a doctor record by Id."
      tags:
        - "Doctors"
      parameters:
        - name: "doctor_id"
          in: "path"
          description: "Id of the doctor to delete"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              message:
                type: "string"
                example: "Doctor with id 1 deleted."
                description: "Confirmation message"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
  /api/referrals:
    get:
      summary: "Get all Referrals"
      description: "Retrieve patient referral view records"
      tags:
        - "Referrals"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/ReferralView"
                description: "List of referral view records"
              number_of_records:
                type: "integer"
                description: "Total number of referral view records"
              pagination:
                type: "object"
                $ref: "#/definitions/Pagination"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
    post:
      summary: "Create a new referral"
      description: "Create a new referral records"
      tags:
        - "Referrals"
      parameters:
        - in: "body"
          name: "body"
          description: "Referral  object to be created"
          required: true
          schema:
            type: "object"
            properties:
              doctor_id:
                type: "integer"
                description: "Unique identifier for the doctor associated with the referral"
              patient_id:
                type: "integer"
                description: "Unique identifier for the patient associated with the referral"
              comment_content:
                type: "string"
                format: text
                example: "Comment is an optional field"
                description: "Text content of the comment"
              test_type:
                type: "string"
                description: "Type of test for which there is a referral"
      responses:
        201:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                $ref: "#/definitions/ReferralView"
                description: "Created referral"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
    put:
      summary: "Update an existing referral"
      description: "Update an existing referral records"
      tags:
        - "Referrals"
      parameters:
        - in: "body"
          name: "body"
          description: "Updated referrak object"
          schema:
            type: "object"
            properties:
              referral_id:
                type: "integer"
                description: "Unique identifier for the referral"
              doctor_id:
                type: "integer"
                description: "Unique identifier for the doctor associated with the referral comment"
              completed:
                type: "boolean"
                description: "Information if the referral has been completed"
              comment_content:
                type: "string"
                format: text
                example: "Comment is an optional field"
                description: "Text content of the comment"
              test_type:
                type: "string"
                description: "Type of test for which there is a referral"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                 type: "boolean"
                 description: "Indicates if the operation was successful"
              data:
                  $ref: "#/definitions/ReferralView"
                  description: "Updated referral"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"

  /api/referrals/{referral_id}:
    get:
      summary: "Get ReferralView by id"
      description: "Retrieve a referral view record by id."
      tags:
        - "Referrals"
      parameters:
        - name: "referral_id"
          in: "path"
          description: "Id of the referral to retrieve"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                 type: "boolean"
                 description: "Indicates if the operation was successful"
              data:
                  $ref: "#/definitions/ReferralView"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
    delete:
      summary: "Delete ReferralView by id"
      description: "Remove a referral view record by id."
      tags:
        - "Referrals"
      parameters:
        - name: "referral_id"
          in: "path"
          description: "Id of the referral to delete"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              message:
                type: "string"
                example: "Referral with id 1 deleted."
                description: "Confirmation message"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"

  /api/referrals/{referral_id}/comment:
    get:
      summary: "Get Referral Comment by referral id"
      description: "Retrieve a referral comment by referral id"
      tags:
        - "Referrals"
      parameters:
        - name: "referral_id"
          in: "path"
          description: "Id of the referral to retrieve"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                 type: "boolean"
                 description: "Indicates if the operation was successful"
              data:
                  $ref: "#/definitions/ReferralComment"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
    delete:
      summary: "Delete Referral Comment by referral id"
      description: "Remove a referral comment by referral id"
      tags:
        - "Referrals"
      parameters:
        - name: "referral_id"
          in: "path"
          description: "Id of the referral comment to delete"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              message:
                type: "string"
                example: "Referral comment with id 1 deleted."
                description: "Confirmation message"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"

  /api/predictions:
    get:
      summary: "Get all AI Predictions"
      description: "Retrieve a list of all ai predictions."
      tags:
        - "AI Predictions"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/AIPrediction"
                description: "List of ai prediction records"
              number_of_records:
                type: "integer"
                description: "Total number of ai prediction records"
              pagination:
                type: "object"
                $ref: "#/definitions/Pagination"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
    post:
      summary: "Create a new prediction"
      description: "Create a new ai prediction record."
      tags:
        - "AI Predictions"
      parameters:
        - in: body
          name: body
          description: Prediction Resource object
          required: true
          schema:
            $ref: '#/definitions/AIPredictionResource'
      responses:
        201:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                $ref: "#/definitions/AIPrediction"
                description: "Created ai prediction"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Related resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
  /api/predictions/{prediction_id}:
    get:
      summary: "Get AI Prediction by id"
      description: "Retrieve an ai prediction record by id."
      tags:
        - "AI Predictions"
      parameters:
        - name: "prediction_id"
          in: "path"
          description: "Id of the ai prediction to retrieve"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                $ref: "#/definitions/AIPrediction"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
    delete:
      summary: "Delete AI Prediction"
      description: "Delete an ai prediction record by Id."
      tags:
        - "AI Predictions"
      parameters:
        - name: "prediction_id"
          in: "path"
          description: "Id of the ai prediction to delete"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              message:
                type: "string"
                example: "Prediction with id 1 deleted."
                description: "Confirmation message"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
  /api/health:
    get:
      summary: "Get all Health comments"
      description: "Retrieve a list of all health comments."
      tags:
        - "Health"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                type: "array"
                items:
                  $ref: "#/definitions/HealthComment"
                description: "List of health comment records"
              number_of_records:
                type: "integer"
                description: "Total number of health comment records"
              pagination:
                $ref: "#/definitions/Pagination"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
    post:
      summary: "Create new Health comment"
      description: "Create a new health comment record."
      tags:
        - "Health"
      parameters:
        - in: "body"
          name: "body"
          description: "Health comment object to be created"
          required: true
          schema:
            type: "object"
            properties:
              doctor_id:
                type: "integer"
                description: "Unique identifier for the doctor associated with the comment"
              patient_id:
                type: "integer"
                description: "Unique identifier for the patient associated with the comment"
              content:
                type: "string"
                format: text
                description: "Text content of the comment"
      responses:
        201:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                $ref: "#/definitions/HealthComment"
                description: "Created health comment"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
    put:
      summary: "Update Health comment"
      description: "Update an existing health comment record."
      tags:
        - "Health"
      parameters:
        - in: "body"
          name: "body"
          description: "Health comment object to be created"
          required: true
          schema:
            type: "object"
            properties:
              id:
                type: "integer"
                description: "Unique identifier for the health comment"
              doctor_id:
                type: "integer"
                description: "Unique identifier for the doctor associated with the comment"
              content:
                type: "string"
                format: text
                description: "Text content of the comment"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                $ref: "#/definitions/HealthComment"
                description: "Updated health comment"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
  /api/health/{health_id}:
    get:
      summary: "Get Health comment by id"
      description: "Retrieve a health comment record by id."
      tags:
        - "Health"
      parameters:
        - name: "health_id"
          in: "path"
          description: "Id of the health comment to retrieve"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              data:
                $ref: "#/definitions/HealthComment"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
    delete:
      summary: "Delete Health comment"
      description: "Delete a health comment record by Id."
      tags:
        - "Health"
      parameters:
        - name: "health_id"
          in: "path"
          description: "Id of the health comment to delete"
          required: true
          type: "integer"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                description: "Indicates if the operation was successful"
              message:
                type: "string"
                example: "Health comment with id 1 deleted."
                description: "Confirmation message"
        404:
          description: "Not found"
          schema:
            type: "object"
            properties:
              success:
                type: "boolean"
                example: false
                description: "Indicates if the operation was not successful"
              message:
                type: "string"
                description: "Error information message"
                example: "Resource not found"
        500:
          description: "Internal Server Error"
          schema:
            $ref: "#/definitions/InternalServerError"
definitions:
  Patient:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Unique identifier for the patient"
      name:
        type: "string"
        description: "Patient's first name"
      surname:
        type: "string"
        description: "Patient's last name"
      email:
        type: "string"
        description: "Patient's email address"
      pesel:
        type: "string"
        pattern: '^[0-9]{11}$'
        description: "PESEL number (Polish identification number)"
  Doctor:
    properties:
      id:
        type: "integer"
        description: "Unique identifier for the patient"
      name:
        type: "string"
        description: "Doctor's first name"
      surname:
        type: "string"
        description: "Doctor's last name"
      email:
        type: "string"
        description: "Doctor's email address"
      pesel:
        type: "string"
        pattern: '^[0-9]{11}$'
        description: "PESEL number (Polish identification number)"
      pwz:
        type: "string"
        pattern: '^[1-9]\d{6}$'
        description: "PWZ number (the number assigned to a doctor's licence to practise)"
  AIPredictionResource:
    properties:
      doctor_id:
        type: "integer"
        description: "Unique identifier for the doctor associated with the prediction"
      patient_id:
        type: "integer"
        description: "Unique identifier for the patient associated with the prediction"
      results_ids:
        type: "array"
        items:
          type: "integer"
          description: "List of test result ids used for prediction"
  AIPrediction:
    properties:
      id:
        type: "integer"
        description: "Unique identifier for the AI prediction"
      doctor_id:
        type: "integer"
        description: "Unique identifier for the doctor associated with the prediction"
      patient_id:
        type: "integer"
        description: "Unique identifier for the patient associated with the prediction"
      content:
        type: "object"
        properties:
          type:
            type: "string"
            description: "Type of data stored in data field as Base64 type"
          data:
            type: "Base64"
            description: "Data stored in Base64 type"
      created_date:
        type: "string"
        format: "date-time"
        description: "Date and time when the prediction was created"
        pattern: 'YYYY-MM-DD HH:MM:SS'
  HealthComment:
    properties:
      id:
        type: "integer"
        description: "Unique identifier for the health comment"
      doctor_id:
        type: "integer"
        description: "Unique identifier for the doctor associated with the comment"
      patient_id:
        type: "integer"
        description: "Unique identifier for the patient associated with the comment"
      content:
        type: "string"
        format: text
        description: "Text content of the comment"
      created_date:
        type: "string"
        format: "date-time"
        description: "Date and time when the comment was created"
        pattern: 'YYYY-MM-DD HH:MM:SS'
      modified_date:
        type: "string"
        format: "date-time"
        description: "Date and time when the comment was modified"
        pattern: 'YYYY-MM-DD HH:MM:SS'
  ReferralView:
    properties:
      referral_id:
        type: "integer"
        description: "Unique identifier for the referral"
      doctor_id:
        type: "integer"
        description: "Unique identifier for the doctor associated with the referral"
      patient_id:
        type: "integer"
        description: "Unique identifier for the patient associated with the referral"
      completed:
        type: "boolean"
        description: "Information if the referral has been completed"
        default: false
      test_type:
        type: "string"
        description: "Type of test for which there is a referral"
      referral_number:
        type: "string"
        description: "Unique referral number generated"
        example: "3120240512154244dff6"
      referral_created_date:
        type: "string"
        format: "date-time"
        description: "Date and time when the referral was created"
        pattern: 'YYYY-MM-DD HH:MM:SS'
      referral_modified_date:
        type: "string"
        format: "date-time"
        description: "Date and time when the referral was modified"
        pattern: 'YYYY-MM-DD HH:MM:SS'
      comment_id:
        type: "integer"
        description: "Unique identifier for the comment associated with the referral"
        default: null
      comment_content:
        type: "string"
        description: "Comment data"
        default: null
  ReferralComment:
    properties:
      id:
        type: "integer"
        description: "Unique identifier for the referral comment"
      doctor_id:
        type: "integer"
        description: "Unique identifier for the doctor associated with the referral comment"
      content:
        type: "string"
        description: "Comment data"
      created_date:
        type: "string"
        format: "date-time"
        description: "Date and time when the referral was created"
        pattern: 'YYYY-MM-DD HH:MM:SS'
      modified_date:
        type: "string"
        format: "date-time"
        description: "Date and time when the referral was modified"
        pattern: 'YYYY-MM-DD HH:MM:SS'
  Pagination:
   type: "object"
   properties:
     total_pages:
       type: "integer"
       description: "Total number of pages"
     total_records:
       type: "integer"
       description: "Total number of doctor records"
     current_page:
       type: "string"
       description: "URL for the current page"
     next_page:
       type: "string"
       description: "URL for the next page, if available"
       default: null
     previous_page:
       type: "string"
       description: "URL for the previous page, if available"
       default: null
  InternalServerError:
    type: "object"
    properties:
      success:
        type: "boolean"
        example: false
        description: "Indicates if the operation was not successful"
      message:
        type: "string"
        description: "Error information message"
        example: "Database connection error. Check VPN!"
securityDefinitions:
  BasicAuth:
    type: basic
security:
  - BasicAuth: []